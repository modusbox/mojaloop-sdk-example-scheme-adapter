openapi: 3.0.1
info:
  title: Mojaloop SDK Outbound Scheme Adapter API
  description: >
    Specification for the Mojaloop SDK Scheme Adapter Outbound Transfers API


    This API can be used by DFSP backends to simplify the process of sending funds to other parties within a Mojaloop scheme.


    Please see other documentation on https://github.com/mojaloop/sdk-scheme-adapter for more information.


    **Note on terminology:** The term "Switch" is equal to the term "Hub", and the term "FSP" is equal to the term "DFSP".
  license:
    name: Apache License Version 2.0, January 2004
    url: http://www.apache.org/licenses/
  version: 1.0.0
paths:
  /:
    get:
      summary: Health check endpoint
      description: This endpoint allows a user of the SDK scheme adapter to check the outbound transfers service is listening.
      tags:
        - Health
      responses:
        200:
          description: Returns empty body if the scheme adapter outbound transfers service is running.
  /transfers:
    post:
      summary: Sends money from one account to another
      description: >
        The HTTP request `POST /transfers` is used to request the movement of funds from payer DFSP to payee DFSP.

        The underlying Mojaloop API has three stages for money transfer:

          1. Party lookup. This facilitates a check by the sending party that the destination party is correct before proceeding with a money movement.
          2. Quotation. This facilitates the exchange of fee information and the construction of a cryptographic "contract" between payee and payer DFSPs before funds are transferred.
          3. Transfer. The enactment of the previously agreed "contract"

        This method has several modes of operation.

        - If the configuration variables `AUTO_ACCEPT_PARTIES` is set to `"false"` this method will terminate when the payee party has been resolved and return the payee party details.
          If the payee wishes to proceed with the transfer, then a subsequent `PUT /transfers/{transferId}` request (accepting the payee party) is required to continue the operation.
          The scheme adapter will then proceed with quotation stage...

        - If the configuration variable `AUTO_ACCEPT_QUOTES` is set to `"false"` this method will terminate and return the quotation when it has been received from the payee DFSP.
          If the payee wished to proceed with the transfer, then a subsequent `PUT /transfers/{transferId}` request (accepting the quote) is required to continue the operation.
          The scheme adapter will then proceed with the transfer state.

        If the configuration variables `AUTO_ACCEPT_PARTIES` and `AUTO_ACCEPT_QUOTES` are both set to `"true"` this method will block until all three transfer stages are complete.
        Upon completion it will return the entire set of transfer details received during the operation.


        Combinations of settings for `AUTO_ACCEPT...` configuration variables allow the scheme adapter user to decide which mode of operation best suits their use cases. i.e. the scheme
        adapter can be configured to "break" the three stage transfer at these points in order to execute backend logic such as party verification, quoted fees assessments etc...

      tags:
        - Transfers
      requestBody:
        description: Transfer request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/transferSuccess'
        400:
          $ref: '#/components/responses/transferBadRequest'
        500:
          $ref: '#/components/responses/transferServerError'
        504:
          $ref: '#/components/responses/transferTimeout'

  /transfers/{transferId}:
    put:
      summary: Continues a transfer that has paused at the quote stage in order to accept or reject payee party and/or quote
      description: >
        The HTTP request `PUT /transfers/{transferId}` is used to continue a transfer initiated via the `POST /transfers` method that has halted after party lookup and/or quotation stage.


        The request body should contain either the "acceptParty" or "acceptQuote" property set to `true` as required to continue the transfer.


        See the description of the `POST /transfers` HTTP method for more information on modes of transfer.
      tags:
        - Transfers
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/transferContinuationAcceptParty'
                - $ref: '#/components/schemas/transferContinuationAcceptQuote'
      parameters:
        - $ref: '#/components/parameters/transferId'
      responses:
        200:
          $ref: '#/components/responses/transferSuccess'
        500:
          $ref: '#/components/responses/transferServerError'
        504:
          $ref: '#/components/responses/transferTimeout'

    get:
      summary: Retrieves information for a specific transfer
      description: The HTTP request `GET /transfers/{transferId}` is used to get information regarding a transfer created or requested earlier. The `{transferId}` in the URI should contain the `transferId` that was used for the creation of the transfer.
      tags:
        - Transfers
      parameters:
        - $ref: '#/components/parameters/transferId'
      responses:
        200:
          description: Transfer information successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferStatusResponse'
        500:
          description: An error occurred processing the transfer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /bulkTransfers:
    post:
      summary: Sends money from one account to multiple accounts
      description: >
        The HTTP request `POST /bulkTransfers` is used to request the movement of funds from payer DFSP to payees' DFSP.
      tags:
        - BulkTransfers
      requestBody:
        description: Bulk transfer request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkTransferRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/bulkTransferSuccess'
        400:
          $ref: '#/components/responses/bulkTransferBadRequest'
        500:
          $ref: '#/components/responses/bulkTransferServerError'
        504:
          $ref: '#/components/responses/bulkTransferTimeout'

  /bulkTransfers/{bulkTransferId}:
    get:
      summary: Retrieves information for a specific bulk transfer
      description: >-
        The HTTP request `GET /bulkTransfers/{bulktTransferId}` is used to get information regarding a bulk transfer created or requested earlier.
        The `{bulkTransferId}` in the URI should contain the `bulkTransferId` that was used for the creation of the bulk transfer.
      tags:
        - BulkTransfers
      parameters:
        - $ref: '#/components/parameters/bulkTransferId'
      responses:
        200:
          description: Bulk transfer information successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bulkTransferStatusResponse'
        500:
          description: An error occurred processing the bulk transfer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /bulkQuotes:
    post:
      summary: Request bulk quotes for the provided financial transactions
      description: >
        The HTTP request `POST /bulkQuotes` is used to request a bulk quote to fascilitate funds transfer from payer DFSP to payees' DFSP.
      tags:
        - BulkQuotes
      requestBody:
        description: Bulk quote request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkQuoteRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/bulkQuoteSuccess'
        400:
          $ref: '#/components/responses/bulkQuoteBadRequest'
        500:
          $ref: '#/components/responses/bulkQuoteServerError'
        504:
          $ref: '#/components/responses/bulkQuoteTimeout'

  /bulkQuotes/{bulkQuoteId}:
    get:
      summary: Retrieves information for a specific bulk quote
      description: >-
        The HTTP request `GET /bulkQuotes/{bulktQuoteId}` is used to get information regarding a bulk quote created or requested earlier.
        The `{bulkQuoteId}` in the URI should contain the `bulkQuoteId` that was used for the creation of the bulk quote.
      tags:
        - BulkQuotes
      parameters:
        - $ref: '#/components/parameters/bulkQuoteId'
      responses:
        200:
          description: Bulk quote information successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bulkQuoteStatusResponse'
        500:
          description: An error occurred processing the bulk quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /requestToPay:
    post:
      summary: Receiver requesting funds from Sender
      description: >
        The HTTP request `POST /requestToPay` is used to support Pull Funds pattern where in a receiver can request for funds from the Sender.

        The underlying API has two stages:

          1. Party lookup. This facilitates a check by the sending party that the destination party is correct before proceeding with a money movement.
          2. Transaction Request. This request enables a Payee to request Payer to send electronic funds to the Payee.

      tags:
        - RequestToPay
      requestBody:
        description: RequestToPay request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestToPayRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/requestToPaySuccess'
        # 400:
        #   $ref: '#/components/responses/requestToPayBadRequest'
        # 500:
        #   $ref: '#/components/responses/requestToPayServerError'
        # 504:
        #   $ref: '#/components/responses/requestToPayTimeout'

  /requestToPayTransfer:
    post:
      summary: Used to trigger funds from customer fsp account to merchant fsp account.
        This is a follow-up request to requestToPay.
      description: >
        The HTTP request `POST /requestToPayTransfer` is used to request the movement of funds from payer DFSP to payee DFSP.

        The underlying Mojaloop API has three stages for money transfer:

          1. Quotation. This facilitates the exchange of fee information and the construction of a cryptographic "contract" between payee and payer DFSPs before funds are transferred.
          2. Authorization. This facilitates getting OTP from payee DFSP.
          3. Transfer. The enactment of the previously agreed "contract"

        This method has several modes of operation.

        - If the configuration variable `AUTO_ACCEPT_QUOTES` is set to `"false"` this method will terminate and return the quotation when it has been received from the payee DFSP.
          If the payee wished to proceed with the otp, then a subsequent `PUT /transfers/{transferId}` request (accepting the quote) is required to continue the operation.
          The scheme adapter will then proceed with the transfer state.

        - If the configuration variable `AUTO_ACCEPT_OTP` is set to `"false"` this method will terminate and return the otp when it has been received from the payee DFSP.
          If the payer wished to proceed with the transfer, then a subsequent `PUT /transfers/{transferId}` request (accepting the quote) is required to continue the operation.
          The scheme adapter will then proceed with the transfer state.

        If the configuration variables `AUTO_ACCEPT_PARTIES` and `AUTO_ACCEPT_QUOTES` are both set to `"true"` this method will block until all three transfer stages are complete.
        Upon completion it will return the entire set of transfer details received during the operation.


        Combinations of settings for `AUTO_ACCEPT...` configuration variables allow the scheme adapter user to decide which mode of operation best suits their use cases. i.e. the scheme
        adapter can be configured to "break" the three stage transfer at these points in order to execute backend logic such as party verification, quoted fees assessments etc...

      tags:
        - RequestToPayTransfer
      requestBody:
        description: Request To Pay Transfer request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestToPayTransferRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/requestToPayTransferSuccess'
        400:
          $ref: '#/components/responses/requestToPayTransferBadRequest'
        500:
          $ref: '#/components/responses/transferServerError'
        504:
          $ref: '#/components/responses/transferTimeout'

  /requestToPayTransfer/{requestToPayTransactionId}:
    put:
      summary: Continues a transfer that has paused at the otp stage in order to accept or reject quote
      description: >
        The HTTP request `PUT /transfers/{transferId}` is used to continue a transfer initiated via the `POST /transfers` method that has halted after party lookup and/or quotation stage.


        The request body should contain either the "acceptOTP" or "acceptQuote" property set to `true` as required to continue the transfer.


        See the description of the `POST /requestToPayTransfer` HTTP method for more information on modes of transfer.
      tags:
        - RequestToPayTransferID
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/transferContinuationAcceptQuote'
                - $ref: '#/components/schemas/transferContinuationAcceptOTP'
      parameters:
        - $ref: '#/components/parameters/requestToPayTransactionId'
      responses:
        200:
          $ref: '#/components/responses/transferSuccess'
        500:
          $ref: '#/components/responses/transferServerError'
        504:
          $ref: '#/components/responses/transferTimeout'

  /accounts:
    post:
      summary:  Create accounts on the Account Lookup Service
      description: The HTTP request `POST /accounts` is used to create account information on the Account Lookup Service (ALS) regarding the provided list of identities.


        Caller DFSP is used as the account source FSP information
      tags:
        - Accounts
      requestBody:
        description: Identities list request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountsRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/accountsCreationCompleted'
        400:
          $ref: '#/components/responses/accountsCreationError'
        500:
          $ref: '#/components/responses/accountsCreationError'
        504:
          $ref: '#/components/responses/accountsCreationTimeout'

  /parties/{Type}/{ID}:
    parameters:
      - $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/parameters/Type.yaml'
      - $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/parameters/ID.yaml'
    get:
      description: >-
        The HTTP request GET /parties// (or GET /parties///) is used to lookup
        information regarding the requested Party, defined by ,  and optionally
        (for example, GET /parties/MSISDN/123456789, or GET
        /parties/BUSINESS/shoecompany/employee1).
      summary: PartiesByTypeAndID
      tags:
        - parties
      operationId: PartiesByTypeAndID
      responses:
        '200':
          $ref: '#/components/responses/PartiesByIdResponse'
        '404':
          $ref: '#/components/responses/PartiesByIdError404'

  /parties/{Type}/{ID}/{SubId}:
    parameters:
      - $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/parameters/Type.yaml'
      - $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/parameters/ID.yaml'
      - $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/parameters/SubId.yaml'
    get:
      description: >-
        The HTTP request GET /parties// (or GET /parties///) is used to lookup
        information regarding the requested Party, defined by ,  and optionally
        (for example, GET /parties/MSISDN/123456789, or GET
        /parties/BUSINESS/shoecompany/employee1).
      summary: PartiesSubIdByTypeAndID
      tags:
        - parties
      operationId: PartiesSubIdByTypeAndID
      responses:
        '200':
          $ref: '#/components/responses/PartiesByIdResponse'
        '404':
          $ref: '#/components/responses/PartiesByIdError404'

components:
  schemas:
    errorResponse:
      type: object
      properties:
        statusCode:
          type: string
          description: Error code as string.
        message:
          type: string
          description: Error message text.

    errorTransferResponse:
      allOf:
        - $ref: '#/components/schemas/errorResponse'
        - type: object
          required:
            - transferState
          properties:
            transferState:
              $ref: '#/components/schemas/transferResponse'

    bulkTransferErrorResponse:
      allOf:
        - $ref: '#/components/schemas/errorResponse'
        - type: object
          required:
            - bulkTansferState
          properties:
            bulkTransferState:
              $ref: '#/components/schemas/bulkTransferResponse'

    errorAccountsResponse:
      allOf:
        - $ref: '#/components/schemas/errorResponse'
        - type: object
          required:
            - executionState
          properties:
            executionState:
              $ref: '#/components/schemas/accountsResponse'

    transactionType:
      type: string
      enum:
      - TRANSFER
      description: Type of transaction.

    transferContinuationAcceptParty:
      type: object
      required:
        - acceptParty
      properties:
        acceptParty:
          type: boolean
          enum:
            - true

    transferContinuationAcceptQuote:
      type: object
      required:
        - acceptQuote
      properties:
        acceptQuote:
          type: boolean
          enum:
            - true
            - false

    transferContinuationAcceptOTP:
      type: object
      required:
        - acceptOTP
      properties:
        acceptOTP:
          type: boolean
          enum:
            - true
            - false

    transferParty:
      type: object
      required:
        - idType
        - idValue
      properties:
        type:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/TransactionInitiatorType.yaml'
        idType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartyIdType.yaml'
        idValue:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartyIdentifier.yaml'
        idSubValue:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartySubIdOrType.yaml'
        displayName:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Name.yaml'
        firstName:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/FirstName.yaml'
        middleName:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/MiddleName.yaml'
        lastName:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/LastName.yaml'
        dateOfBirth:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/DateOfBirth.yaml'
        merchantClassificationCode:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/MerchantClassificationCode.yaml'
        fspId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/FspId.yaml'
        extensionList:
          $ref: '#/components/schemas/extensionListEmptiable'

    extensionListEmptiable:
      type: array
      items:
        $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Extension.yaml'
      minItems: 0
      maxItems: 16

    transferRequest:
      type: object
      required:
        - homeTransactionId
        - from
        - to
        - amountType
        - currency
        - amount
        - transactionType
      properties:
        homeTransactionId:
          type: string
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
        from:
          $ref: '#/components/schemas/transferParty'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/AmountType.yaml'
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Amount.yaml'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Note.yaml'
        quoteRequestExtensions:
          $ref: '#/components/schemas/extensionListEmptiable'
        transferRequestExtensions:
          $ref: '#/components/schemas/extensionListEmptiable'

    requestToPayRequest:
      type: object
      required:
        - homeTransactionId
        - from
        - to
        - amountType
        - currency
        - amount
        - scenario
        - initiator
        - initiatorType
      properties:
        homeTransactionId:
          type: string
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
        from:
          $ref: '#/components/schemas/transferParty'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/AmountType.yaml'
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Amount.yaml'
        scenario:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/TransactionType.yaml'
        initiator:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/TransactionInitiator.yaml'
        initiatorType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/TransactionInitiatorType.yaml'

    requestToPayResponse:
      type: object
      required:
        - transactionRequestId
        - from
        - to
        - amountType
        - currency
        - amount
        - transactionType
        - requestToPayState
      properties:
        transactionRequestId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        from:
          $ref: '#/components/schemas/transferParty'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/AmountType.yaml'
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Amount.yaml'
        scenario:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/TransactionType.yaml'
        initiator:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/TransactionInitiator.yaml'
        initiatorType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/TransactionInitiatorType.yaml'
        authenticationType:
          type: string
          description: OTP or QR Code, otherwise empty
        requestToPayState:
          $ref: '#/components/schemas/mojaloopTransactionRequestState'

    requestToPayTransferRequest:
      type: object
      required:
        - requestToPayTransactionId
        - from
        - to
        - amountType
        - currency
        - amount
        - scenario
        - initiator
        - initiatorType
      properties:
        requestToPayTransactionId:
          type: string
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
        from:
          $ref: '#/components/schemas/transferParty'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/AmountType.yaml'
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Amount.yaml'
        scenario:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/TransactionType.yaml'
        initiator:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/TransactionInitiator.yaml'
        initiatorType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/TransactionInitiatorType.yaml'
        note:
          maxLength: 128
          type: string

    requestToPayTransferResponse:
      type: object
      required:
        - requestToPayTransactionId
        - from
        - to
        - amountType
        - currency
        - amount
        - transactionType
      properties:
        transferId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        requestToPayTransactionId:
          type: string
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
        from:
          $ref: '#/components/schemas/transferParty'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/AmountType.yaml'
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Amount.yaml'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          maxLength: 128
          type: string
        currentState:
          $ref: '#/components/schemas/transferStatus'
        quoteId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        quoteResponse:
          $ref: '#/components/schemas/quote'
        quoteResponseSource:
          type: string
          description: >
            FSPID of the entity that supplied the quote response. This may not be the same as the FSPID of the entity which
            owns the end user account in the case of a FOREX transfer. i.e. it may be a FOREX gateway.
        fulfil:
          $ref: '#/components/schemas/transferFulfilment'
        lastError:
          description: >
            Object representing the last error to occur during a transfer process. This may be a Mojaloop API error returned from another entity in the scheme
            or an object representing other types of error e.g. exceptions that may occur inside the scheme adapter.
          $ref: '#/components/schemas/transferError'


    transferResponse:
      type: object
      required:
        - homeTransactionId
        - from
        - to
        - amountType
        - currency
        - amount
        - transactionType
      properties:
        transferId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        homeTransactionId:
          type: string
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
        from:
          $ref: '#/components/schemas/transferParty'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/AmountType.yaml'
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Amount.yaml'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          maxLength: 128
          type: string
        currentState:
          $ref: '#/components/schemas/transferStatus'
        quoteId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        quoteResponse:
          $ref: '#/components/schemas/quote'
        quoteResponseSource:
          type: string
          description: >
            FSPID of the entity that supplied the quote response. This may not be the same as the FSPID of the entity which
            owns the end user account in the case of a FOREX transfer. i.e. it may be a FOREX gateway.
        fulfil:
          $ref: '#/components/schemas/transferFulfilment'
        lastError:
          description: >
            Object representing the last error to occur during a transfer process. This may be a Mojaloop API error returned from another entity in the scheme
            or an object representing other types of error e.g. exceptions that may occur inside the scheme adapter.
          $ref: '#/components/schemas/transferError'

    bulkTransferResponse:
      type: object
      required:
        - from
        - individualTransferResults
      properties:
        transferId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        from:
          $ref: '#/components/schemas/transferParty'
        individualTransferResults:
          type: array
          maxItems: 1000
          items:
            $ref: '#/components/schemas/individualTransferResult'
          description: List of individual transfer result in a bulk transfer response.

    transferStatusResponse:
      type: object
      required:
        - transferId
        - currentState
        - fulfil
      properties:
        transferId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        currentState:
          $ref: '#/components/schemas/transferStatus'
        fulfil:
          $ref: '#/components/schemas/transferFulfilment'

    bulkTransferStatusResponse:
      type: object
      required:
        - bulkTransferId
        - currentState
        - fulfils
      properties:
        bulkTransferId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        currentState:
          $ref: '#/components/schemas/bulkTransferStatus'
        fulfils:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: '#/components/schemas/individualTransferFulfilment'

    bulkQuoteStatusResponse:
      type: object
      required:
        - bulkQuoteId
        - currentState
        - individualQuotes
      properties:
        bulkQuoteId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        currentState:
          $ref: '#/components/schemas/bulkQuoteStatus'
        individualQuotes:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: '#/components/schemas/individualQuote'

    quote:
      description: Mojaloop API response to a quote request
      $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/QuotesIDPutResponse.yaml'

    transferFulfilment:
      description: A Mojaloop API transfer fulfilment
      $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/TransfersIDPutResponse.yaml'

    individualTransferFulfilment:
      type: object
      description: A Mojaloop API transfer fulfilment for individual transfers in a bulk transfer
      properties:
        fulfilment:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/IlpFulfilment.yaml'
          description: >
            Fulfilment of the condition specified with the transaction.
            Mandatory if transfer has completed successfully.
        extensionList:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/ExtensionList.yaml'
          description: 'Optional extension, specific to deployment.'

    mojaloopTransactionRequestState:
      title: TransactionRequestStateEnum
      type: string
      enum:
        - RECEIVED
        - PENDING
        - ACCEPTED
        - REJECTED
      description: >-
        Below are the allowed values for the enumeration - RECEIVED Payer FSP
        has received the transaction from the Payee FSP. - PENDING Payer FSP has
        sent the transaction request to the Payer. - ACCEPTED Payer has approved
        the transaction. - REJECTED Payer has rejected the transaction.

    transferError:
      type: object
      description: This object represents a Mojaloop API error received at any time during the transfer process
      properties:
        httpStatusCode:
          type: integer
          description: The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response.
        mojaloopError:
          description: If a transfer process results in an error callback during the asynchronous Mojaloop API exchange, this property will contain the underlying Mojaloop API error object.
          $ref: '#/components/schemas/mojaloopError'

    mojaloopError:
      type: object
      properties:
        errorInformation:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/ErrorInformation.yaml'

    transferStatus:
      type: string
      enum:
      - ERROR_OCCURRED
      - WAITING_FOR_PARTY_ACCEPTANCE
      - WAITING_FOR_QUOTE_ACCEPTANCE
      - COMPLETED

    bulkTransferStatus:
      type: string
      enum:
      - ERROR_OCCURRED
      - COMPLETED

    bulkQuoteStatus:
      type: string
      enum:
      - ERROR_OCCURRED
      - COMPLETED

    accountsCreationState:
      type: string
      enum:
      - ERROR_OCCURRED
      - COMPLETED

    accountsRequest:
      type: array
      items:
        type: object
        required:
        - idType
        - idValue
        - currency
        properties:
          idType:
            $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartyIdType.yaml'
          idValue:
            $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartyIdentifier.yaml'
          idSubValue:
            $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartySubIdOrType.yaml'
          currency:
            $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'

    accountCreationStatus:
      type: array
      items:
        type: object
        required:
        - idType
        - idValue
        properties:
          idType:
            $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartyIdType.yaml'
          idValue:
            $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartyIdentifier.yaml'
          idSubValue:
            $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartySubIdOrType.yaml'
          error:
            $ref: '#/components/schemas/errorResponse'

    accountsResponse:
      type: object
      required:
        - accounts
      properties:
        modelId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        accounts:
          $ref: '#/components/schemas/accountsRequest'
        response:
          $ref: '#/components/schemas/accountCreationStatus'
        currentState:
          $ref: '#/components/schemas/accountsCreationState'
        lastError:
          $ref: '#/components/schemas/transferError'

    bulkTransferRequest:
      type: object
      required:
        - homeTransactionId
        - from
        - individualTransfers
      properties:
        homeTransactionId:
          type: string
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
        bulkTransferId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        from:
          $ref: '#/components/schemas/transferParty'
        individualTransfers:
          description: List of individual transfers in a bulk transfer.
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: '#/components/schemas/individualTransfer'
        extensions:
            $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/ExtensionList.yaml'

    individualTransfer:
      title: IndividualTransfer
      type: object
      description: Data model for the complex type 'individualTransfer'.
      properties:
        transferId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/AmountType.yaml'
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Amount.yaml'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          maxLength: 128
          type: string
        extensions:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/ExtensionList.yaml'
      required:
        - transferId
        - to
        - amountType
        - currency
        - transactionType

    individualTransferResult:
      type: object
      properties:
        transferId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/AmountType.yaml'
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Amount.yaml'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          maxLength: 128
          type: string
        quoteId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        quoteResponse:
          $ref: '#/components/schemas/quote'
        quoteResponseSource:
          type: string
          description: >
            FSPID of the entity that supplied the quote response. This may not be the same as the FSPID of the entity which
            owns the end user account in the case of a FOREX transfer. i.e. it may be a FOREX gateway.
        fulfil:
          $ref: '#/components/schemas/transferFulfilment'
        lastError:
          description: >
            Object representing the last error to occur during a transfer process. This may be a Mojaloop API error returned from another entity in the scheme
            or an object representing other types of error e.g. exceptions that may occur inside the scheme adapter.
          $ref: '#/components/schemas/transferError'

    bulkQuoteRequest:
      type: object
      required:
        - homeTransactionId
        - from
        - individualQuotes
      properties:
        homeTransactionId:
          type: string
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
        bulkQuoteId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        from:
          $ref: '#/components/schemas/transferParty'
        individualQuotes:
          description: List of individual quotes in a bulk quote.
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: '#/components/schemas/individualQuote'
        extensions:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/ExtensionList.yaml'

    individualQuote:
      title: IndividualQuote
      type: object
      description: Data model for the complex type 'individualQuote'.
      properties:
        quoteId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/AmountType.yaml'
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Amount.yaml'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Note.yaml'
        extensions:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/ExtensionList.yaml'
      required:
        - quoteId
        - to
        - amountType
        - currency
        - transactionType

    bulkQuoteResponse:
      type: object
      required:
        - from
        - individualQuoteResults
      properties:
        quoteId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        homeTransactionId:
          type: string
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
        from:
          $ref: '#/components/schemas/transferParty'
        individualQuoteResults:
          type: array
          maxItems: 1000
          items:
            $ref: '#/components/schemas/individualQuoteResult'
          description: List of individualQuoteResults in a bulk transfer response.

    individualQuoteResult:
      type: object
      properties:
        quoteId:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/AmountType.yaml'
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'
        amount:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Amount.yaml'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          maxLength: 128
          type: string
        lastError:
          description: >
            Object representing the last error to occur during a quote process. This may be a Mojaloop API error returned from another entity in the scheme
            or an object representing other types of error e.g. exceptions that may occur inside the scheme adapter.
          $ref: '#/components/schemas/quoteError'

    quoteError:
      type: object
      description: This object represents a Mojaloop API error received at any time during the quote process
      properties:
        httpStatusCode:
          type: integer
          description: The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response.
        mojaloopError:
          description: If a quote process results in an error callback during the asynchronous Mojaloop API exchange, this property will contain the underlying Mojaloop API error object.
          $ref: '#/components/schemas/mojaloopError'

    bulkQuoteErrorResponse:
      allOf:
        - $ref: '#/components/schemas/errorResponse'
        - type: object
          required:
            - bulkTansferState
          properties:
            bulkQuoteState:
              $ref: '#/components/schemas/bulkQuoteResponse'

    # /parties/... schemas
    PartiesCurrentState:
      type: string
      enum:
        - 'WAITING_FOR_REQUEST_PARTY_INFORMATION'
        - 'COMPLETED'
        - 'ERROR_OCCURRED'

    AccountList:
      title: AccountList
      type: object
      description: Data model for the complex type AccountList
      properties:
        account:
          type: array
          items:
            $ref: '#/components/schemas/Account'
          minItems: 1
          maxItems: 32
          description: Accounts associated with the Party
      required:
        - account

    Account:
      title: Account
      type: object
      description: Data model for the complex type Account
      properties:
        address:
          $ref: '../../node_modules/@mojaloop/api-snippets/thirdparty/openapi3/components/schemas/AccountAddress.yaml'
          type: string
          description: Unique routable address which is DFSP specific.
        currency:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Currency.yaml'
          type: string
          description: Currency of the amount.
        description:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/Name.yaml'
          type: string
          description: The name of the account.
      required:
        - address
        - currency
        - description

    Party:
      title: Party
      type: object
      description: Data model for the complex type Party.
      properties:
        accounts:
          $ref: '#/components/schemas/AccountList'
        partyIdInfo:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartyIdInfo.yaml'
        merchantClassificationCode:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/MerchantClassificationCode.yaml'
        name:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartyName.yaml'
        personalInfo:
          $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/PartyPersonalInfo.yaml'
      required:
        - partyIdInfo

  responses:
    transferSuccess:
      description: Transfer completed successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transferResponse'
    transferBadRequest:
      description: Malformed or missing required body, headers or parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorTransferResponse'
    transferServerError:
      description: An error occurred processing the transfer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorTransferResponse'
    transferTimeout:
      description: Timeout occurred processing the transfer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorTransferResponse'

    bulkTransferSuccess:
      description: Bulk transfer completed successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bulkTransferResponse'
    bulkTransferBadRequest:
      description: Malformed or missing required body, headers or parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bulkTransferErrorResponse'
    bulkTransferServerError:
      description: An error occurred processing the bulk transfer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bulkTransferErrorResponse'
    bulkTransferTimeout:
      description: Timeout occurred processing the bulk transfer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bulkTransferErrorResponse'

    bulkQuoteSuccess:
      description: Bulk quote completed successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bulkQuoteResponse'
    bulkQuoteBadRequest:
      description: Malformed or missing required body, headers or parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bulkQuoteErrorResponse'
    bulkQuoteServerError:
      description: An error occurred processing the bulk quote
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bulkQuoteErrorResponse'
    bulkQuoteTimeout:
      description: Timeout occurred processing the bulk quote
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bulkQuoteErrorResponse'

    accountsCreationCompleted:
      description: Accounts creation completed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/accountsResponse'
    accountsCreationError:
      description: An error occurred creating accounts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorAccountsResponse'
    accountsCreationTimeout:
      description: Timeout occurred creating accounts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorAccountsResponse'
    requestToPaySuccess:
      description: Request to Pay completed successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/requestToPayResponse'
    requestToPayTransferSuccess:
      description: Transfer completed successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/requestToPayTransferResponse'
    requestToPayTransferBadRequest:
      description: Malformed or missing required body, headers or parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorTransferResponse'
    PartiesByIdResponse:
      description: PartiesByIdResponse
      content:
        application/json:
          schema:
            type: object
            description: 'GET /parties/{Type}/{ID} response object'
            properties:
              party:
                $ref: '#/components/schemas/Party'
                description: Information regarding the requested Party.
              currentState:
                $ref: '#/components/schemas/PartiesCurrentState'
            required:
              - party
              - currentState
    PartiesByIdError404:
      description: PartiesByIdError404
      content:
        application/json:
          schema:
            type: object
            properties:
              errorInformation:
                $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/ErrorInformation.yaml'
  parameters:
    transferId:
      name: transferId
      in: path
      required: true
      schema:
        $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
      description: Identifier of the transfer to continue as returned in the response to a `POST /transfers` request.
    bulkTransferId:
      name: bulkTransferId
      in: path
      required: true
      schema:
        $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
      description: Identifier of the bulk transfer to continue as returned in the response to a `POST /bulkTransfers` request.
    bulkQuoteId:
      name: bulkQuoteId
      in: path
      required: true
      schema:
        $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
      description: Identifier of the bulk transfer to continue as returned in the response to a `POST /bulkTransfers` request.
    requestToPayTransactionId:
      name: requestToPayTransactionId
      in: path
      required: true
      schema:
        $ref: '../../node_modules/@mojaloop/api-snippets/fspiop/v1_1/openapi3/components/schemas/CorrelationId.yaml'
      description: Identifier of the merchant request to pay transfer to continue as returned in the response to a `POST /requestToPayTransfer` request.
